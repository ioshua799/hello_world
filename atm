import java.util.HashMap;
import java.util.Scanner;

class Main {
    private static HashMap<String, String> users = new HashMap<>();
    private static HashMap<String, Double> balances = new HashMap<>();
    private static String currentUser = null;
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        while (true) {
            System.out.println("ATM SYSTEM");
            System.out.println("REGISTER");
            System.out.println("LOGIN");
            System.out.println("EXIT");
            System.out.print("PICK AN OPTION: ");
            int option = scanner.nextInt();
            scanner.nextLine();
            
            switch (option) {
                case 1:
                    register(scanner);
                    break;
                case 2:
                    if (login(scanner)) {
                        atmMenu(scanner);
                    }
                    break;
                case 3:
                    System.out.println("Thanks.");
                    return;
                default:
                    System.out.println("Invalid option");
            }
        }
    }
    
    private static void register(Scanner scanner) {
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        
        if (users.containsKey(username)) {
            System.out.println("Username already exists.");
            return;
        }
        
        System.out.print("Enter a PIN: ");
        String pin = scanner.nextLine();
        
        users.put(username, pin);
        balances.put(username, 0.0);
        System.out.println("Registration successful!");
    }
    
    private static boolean login(Scanner scanner) {
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        
        if (!users.containsKey(username)) {
            System.out.println("User not found");
            return false;
        }
        
        System.out.print("Enter PIN: ");
        String pin = scanner.nextLine();
        
        if (users.get(username).equals(pin)) {
            currentUser = username;
            System.out.println("Login successful!");
            return true;
        } else {
            System.out.println("Incorrect PIN.");
            return false;
        }
    }
    
    private static void atmMenu(Scanner scanner) {
        while (true) {
            System.out.println("ATM MENU");
            System.out.println("CHECK BALANCE");
            System.out.println("DEPOSIT");
            System.out.println("WITHDRAW");
            System.out.println("EXIT");
            System.out.print("PICK AN OPTION: ");
            int choice = scanner.nextInt();
            
            switch (choice) {
                case 1:
                    checkBalance();
                    break;
                case 2:
                    deposit(scanner);
                    break;
                case 3:
                    withdraw(scanner);
                    break;
                case 4:
                    System.out.println("Exited.");
                    currentUser = null;
                    return;
                default:
                    System.out.println("Invalid option.");
            }
        }
    }
    
    private static void checkBalance() {
        System.out.println("Your balance is $" + balances.get(currentUser));
    }
    
    private static void deposit(Scanner scanner) {
        System.out.print("Enter amount to deposit: $");
        double amount = scanner.nextDouble();
        
        if (amount > 0) {
            balances.put(currentUser, balances.get(currentUser) + amount);
            System.out.println("Deposited $" + amount);
        } else {
            System.out.println("Invalid amount.");
        }
    }
    
    private static void withdraw(Scanner scanner) {
        System.out.print("Enter amount to withdraw: $");
        double amount = scanner.nextDouble();
        
        if (amount > 0 && amount <= balances.get(currentUser)) {
            balances.put(currentUser, balances.get(currentUser) - amount);
            System.out.println("Withdrew $" + amount);
        } else if (amount > balances.get(currentUser)) {
            System.out.println("Not enough balance.");
        } else {
            System.out.println("Invalid amount.");
        }
    }
}
